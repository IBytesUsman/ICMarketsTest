// <auto-generated />
using System;
using ICMarkets.DeveloperTest.Datacontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICMarkets.DeveloperTest.API.Migrations
{
    [DbContext(typeof(ICMarketsDbContext))]
    [Migration("20230908190828_Initial-Migrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("ICMarkets.DeveloperTest.Datacontext.Entities.BlockchainDataEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("BaseFee")
                        .HasColumnType("INTEGER")
                        .HasColumnName("base_fee");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("hash");

                    b.Property<long>("Height")
                        .HasColumnType("INTEGER")
                        .HasColumnName("height");

                    b.Property<long>("HighGasPrice")
                        .HasColumnType("INTEGER")
                        .HasColumnName("high_gas_price");

                    b.Property<long>("HighPriorityFee")
                        .HasColumnType("INTEGER")
                        .HasColumnName("high_priority_fee");

                    b.Property<string>("LastForkHash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("last_fork_hash");

                    b.Property<long>("LastForkHeight")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_fork_height");

                    b.Property<string>("LatestUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("latest_url");

                    b.Property<long>("LowGasPrice")
                        .HasColumnType("INTEGER")
                        .HasColumnName("low_gas_price");

                    b.Property<long>("LowPriorityFee")
                        .HasColumnType("INTEGER")
                        .HasColumnName("low_priority_fee");

                    b.Property<long>("MediumGasPrice")
                        .HasColumnType("INTEGER")
                        .HasColumnName("medium_gas_price");

                    b.Property<long>("MediumPriorityFee")
                        .HasColumnType("INTEGER")
                        .HasColumnName("medium_priority_fee");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("PeerCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("peer_count");

                    b.Property<string>("PreviousHash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("previous_hash");

                    b.Property<string>("PreviousUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("previous_url");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT")
                        .HasColumnName("time");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER")
                        .HasColumnName("type");

                    b.Property<int>("UnconfirmedCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("unconfirmed_count");

                    b.HasKey("Id")
                        .HasName("pk_blockchain_data");

                    b.ToTable("blockchain_data", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
